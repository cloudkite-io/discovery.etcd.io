additionalPrometheusRulesMap:
  custom:
    groups:
      - name: Instances
        interval: 5s
        rules:
          - alert: InstanceDown
            expr: up == 0
            for: 1m
            labels:
              severity: high
            annotations:
              summary: "Instance {{ $labels.instance }} down"
              description: "{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 1 minute."
          - alert: APIHighRequestLatency
            expr: api_http_request_latencies_second{quantile="0.5"} > 1
            for: 5m
            labels:
              severity: high
            annotations:
              summary: "High request latency on {{ $labels.instance }}"
              description: "{{ $labels.instance }} has a median request latency above 1s (current value: {{ $value }}s)"

# TODO: Enable admission webhook. cert-manager should be set up first.
# See: https://github.com/helm/charts/tree/master/stable/prometheus-operator#prometheusrules-admission-webhooks
prometheusOperator:
  admissionWebhooks:
    enabled: false

prometheus:
  prometheusSpec:
    storageSpec: 
      volumeClaimTemplate:
        accessModes: 
          - ReadWriteOnce
        resources:
          requests:
            storage: 50Gi

grafana:
  enabled: true
  ingress:
    enabled: true
    annotations: 
      certmanager.k8s.io/cluster-issuer: letsencrypt
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
    hosts:
      - grafana.dev.discovery.etcd.io
    tls:
    - hosts:
      - grafana.dev.discovery.etcd.io
      secretName: tls-grafana-cert

